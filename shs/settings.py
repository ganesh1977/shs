"""
Django settings for smarthospitalsystem project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import dj_database_url
import os
"""from google.oauth2 import service_account

GOOGLE_CREDENTIALS_FILE = os.environ.get("GOOGLE_APPLICATION_CREDENTIALS")


SERVICE_ACCOUNT_FILE = os.getenv(
    "GOOGLE_APPLICATION_CREDENTIALS",
    "/home/ganesh/shs/service-account.json"  # fallback
)

GOOGLE_CREDENTIALS = service_account.Credentials.from_service_account_file(
    SERVICE_ACCOUNT_FILE
)

if GOOGLE_CREDENTIALS_FILE:
    GOOGLE_CREDENTIALS = service_account.Credentials.from_service_account_file(
        GOOGLE_CREDENTIALS_FILE
)"""

ALLOWED_HOSTS = ["127.0.0.1", "localhost", "shs.com", "www.shs.com"]

"""if os.environ.get("GOOGLE_ENVIRONMENT_DOMIANE"):
    GOOGLE_ENVIRONMENT_DOMAIN = os.environ.get("GOOGLE_ENVIRONMENT_DOMAIN")
    ALLOWED_HOSTS.append("http://{os.environ.get('GOOGLE_ENVIRONMENT_DOMAIN)}")

if os.environ.get("GOOGLE_CUSTOM_DOMIANE"):
    GOOGLE_CUSTOM_DOMAIN = os.environ.get("GOOGLE_CUSTOM_DOMAIN")
    ALLOWED_HOSTS.append("http://{os.environ.get('GOOGLE_CUSTOM_DOMAIN')}")"""
    
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in  secret!
SECRET_KEY = "django-insecure-gmy1v6vd$0&xt$u@e4n=k6*$(4hra@x8v)-ekq#1hjcjqondy3"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "users",
    "rest_framework",
    "rest_framework_swagger",
    "drf_yasg",
    "voicebot",
    "channels"
]
SWAGGER_SETTINGS = {
    "DEFAULT_INFO": "shs.swagger.schema_info",
}

SETTINGS_PATH = os.path.normpath(os.path.dirname(__file__))
TEMPLATE_DIRS = (
    os.path.join(SETTINGS_PATH, 'templates'),
)

ASGI_APPLICATION = "shs.asgi.application"

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "shs.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "shs.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

"""DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}"""

DATABASES = {
    'default': dj_database_url.config(
        #default=f"postgres://USER:PASSWORD@/DB_NAME?host=/cloudsql/smarthospitalsystem:asia-south1:instance-name"
        default="mysql://root:gansuv@localhost:3306/smarthospitalsystem"
    )
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        "rest_framework.permissions.AllowAny",
    ]
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Use SECRET_KEY from env
SECRET_KEY = os.getenv("SECRET_KEY", "change-me")

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
